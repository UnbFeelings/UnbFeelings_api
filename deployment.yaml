apiVersion: "extensions/v1beta1"
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      volumes:
        - name: shared
          emptyDir: {}
      containers:
        - name: api
          image: gcr.io/unbfeelings/api:latest
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: shared
              mountPath: /software/unbfeelings/staticfiles
        - name: nginx
          image: gcr.io/unbfeelings/nginx:latest
          ports:
            - containerPort: 8001
          volumeMounts:
            - name: shared
              mountPath: /usr/share/nginx/html
---
apiVersion: "extensions/v1beta1"
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template: 
    metadata:
      labels: 
        app: db
    spec:
      containers:
        - name: postgres
          image: gcr.io/unbfeelings/postgres:latest
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/db-data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: db
  ports:
    - name: postgres
      port: 5432
      protocol: TCP
      targetPort: 5432
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-port
spec:
  selector: 
    app: api
  ports:
    - name: nginx-port
      port: 80
      protocol: TCP
      targetPort: 8001
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: basic-ingress
spec:
  backend:
    serviceName: nginx-port
    servicePort: 80
